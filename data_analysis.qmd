---
title: "data_analysis"
author: "Ethan McBride"
format: html
---

## Loading necessary packages and data

```{r}
library(tidyverse)
library(broom)

appp_data <- read_csv("data/APPP_dataset.csv")

appp_data <- appp_data |>
  arrange(total_population) |>
  mutate(
    pop_category = case_when(
      total_population > 500000 ~ "Large (500K+)",
      total_population > 100000 ~ "Medium (100K-500K)", 
      total_population > 50000 ~ "Small (50K-100K)",
      TRUE ~ "Very Small (<50K)"
    )
  )
```

## EDA - focused on access to care

```{r}
# appp_data |>
#   filter(!is.na(total_population)) |>
#   arrange(total_population) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = total_population, y = county_name)) +
#   geom_segment(aes(x = 0, xend = total_population, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "steelblue", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA)) +
#   labs(
#     title = "Total Population of All Pennsylvania Counties",
#     x = NULL,
#     y = NULL,
#     caption = "Source: US Census Bureau"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(rate_of_pregnant_women_with_oud_diagnosis)) |>
#   arrange(rate_of_pregnant_women_with_oud_diagnosis) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = rate_of_pregnant_women_with_oud_diagnosis, y = county_name)) +
#   geom_segment(aes(x = 0, xend = rate_of_pregnant_women_with_oud_diagnosis, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "steelblue", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA)) +
#   labs(
#     title = "Opioid Use Disorder Rates Among Pregnant Women",
#     subtitle = "Pennsylvania Counties | Rate per 1,000 pregnant women",
#     x = "Rate per 1,000 pregnant women",
#     y = NULL,
#     caption = "Source: Pennsylvania Department of Health"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(poverty_rate)) |>
#   arrange(poverty_rate) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = poverty_rate, y = county_name)) +
#   geom_segment(aes(x = 0, xend = poverty_rate, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "#e74c3c", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA)) +
#   labs(
#     title = "Poverty Rates Across Pennsylvania Counties",
#     subtitle = "Percentage of families below poverty line",
#     x = "Poverty Rate (%)",
#     y = NULL,
#     caption = "Source: US Department of Agriculture Economic Research Service (ERS)"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(unemployment_rate_2022)) |>
#   arrange(unemployment_rate_2022) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = unemployment_rate_2022, y = county_name)) +
#   geom_segment(aes(x = 0, xend = unemployment_rate_2022, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "#f39c12", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA)) +
#   labs(
#     title = "Unemployment Rates Across Pennsylvania Counties",
#     subtitle = "2022 unemployment rate by county",
#     x = "Unemployment Rate (%)",
#     y = NULL,
#     caption = "Source: Bureau of Labor Statistics"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(pct_prenatal_care_first_trimester)) |>
#   arrange(pct_prenatal_care_first_trimester) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = pct_prenatal_care_first_trimester, y = county_name)) +
#   geom_segment(aes(x = 0, xend = pct_prenatal_care_first_trimester, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "#27ae60", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, 100)) +
#   labs(
#     title = "First Trimester Prenatal Care Access",
#     subtitle = "Percentage of pregnant women receiving care in first trimester",
#     x = "Percentage Receiving First Trimester Care (%)",
#     y = NULL,
#     caption = "Source: Pennsylvania Department of Health"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(pct_low_birth_weight)) |>
#   arrange(pct_low_birth_weight) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = pct_low_birth_weight, y = county_name)) +
#   geom_segment(aes(x = 0, xend = pct_low_birth_weight, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "#8e44ad", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA)) +
#   labs(
#     title = "Low Birth Weight Rates by County",
#     subtitle = "Percentage of births under x grams",
#     x = "Low Birth Weight Rate (%)",
#     y = NULL,
#     caption = "Source: Pennsylvania Department of Health"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )
# 
# appp_data |>
#   filter(!is.na(median_household_income_2022)) |>
#   arrange(median_household_income_2022) |>
#   mutate(county_name = fct_inorder(county_name)) |>
#   ggplot(aes(x = median_household_income_2022, y = county_name)) +
#   geom_segment(aes(x = 0, xend = median_household_income_2022, 
#                    y = county_name, yend = county_name), 
#                color = "gray70", size = 0.5) +
#   geom_point(color = "#16a085", size = 2.5, alpha = 0.8) +
#   scale_x_continuous(expand = c(0.02, 0), limits = c(0, NA),
#                      labels = scales::dollar_format(scale = 1/1000, suffix = "K")) +
#   labs(
#     title = "Median Household Income by County",
#     subtitle = "2022 median household income",
#     x = "Median Household Income",
#     y = NULL,
#     caption = "Source: US Census Bureau"
#   ) +
#   theme_minimal() +
#   theme(
#     axis.text.y = element_text(size = 6.5, color = "black"),
#     axis.text.x = element_text(size = 8),
#     plot.title = element_text(size = 12, face = "bold", margin = margin(b = 5)),
#     plot.subtitle = element_text(size = 10, color = "gray40", margin = margin(b = 15)),
#     panel.grid.major.y = element_blank(),
#     panel.grid.minor = element_blank(),
#     panel.grid.major.x = element_line(color = "gray90", linewidth = 0.5),
#     plot.margin = margin(10, 10, 10, 10)
#   )

create_histograms <- function(data, variable) {
  data |>
    filter(!is.na(.data[[variable]])) |>
    ggplot(aes(x = .data[[variable]])) +
    geom_histogram(bins = 15, fill = "steelblue", alpha = 0.7, color = "white") +
    geom_vline(aes(xintercept = mean(.data[[variable]], na.rm = TRUE)),
               color = "#e74c3c", linetype = "dashed", linewidth = 1) +
    labs(
      title = paste("Distribution of", variable, "Across Pennsylvania Counties"),
      subtitle = "Number of counties by rate range",
      x = variable,
      y = "Count"
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 12, face = "bold"),
      plot.subtitle = element_text(size = 10, color = "gray40")
    )
}

vars <- c("poverty_rate", "unemployment_rate_2022", "median_household_income_2022",
                   "pct_prenatal_care_first_trimester", "pct_low_birth_weight",
                   "pct_black", "pct_hispanic", "pct_white", "fertility_rate", 
                   "pct_fair_poor_health")


histograms <- lapply(histogram_vars, function(var) {
  create_histograms(appp_data, var)
})

for (i in seq_along(histograms)) {
  print(histograms[[i]])
}

create_boxplots <- function(data, variable) {
  data |>
    filter(!is.na(.data[[variable]])) |>
    ggplot(aes(x = pop_category, y = .data[[variable]], fill = pop_category)) +
    geom_boxplot(outlier.shape = NA, alpha = 0.7) +
    # geom_jitter(width = 0.2, size = 1.5, alpha = 0.5, color = "black") +
    labs(
      title = paste("Boxplot of", variable, "by Population Category"),
      x = "Population Category",
      y = variable
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 12, face = "bold"),
      legend.position = "none"
    )
}

boxplots <- lapply(vars, function(var) {
  create_boxplots(appp_data, var)
})
for (i in seq_along(boxplots)) {
  print(boxplots[[i]])
}

create_dotplots <- function(data, variable) {
  data |>
    filter(!is.na(.data[[variable]])) |>
    ggplot(aes(x = pop_category, y = .data[[variable]], color = pop_category)) +
    geom_point(position = position_jitter(width = 0.2), size = 2.5, alpha = 0.7) +
    labs(
      title = paste("Dot Plot of", variable, "by Population Category"),
      x = "Population Category",
      y = variable
    ) +
    theme_minimal() +
    theme(
      plot.title = element_text(size = 12, face = "bold"),
      legend.position = "none"
    )
}
dotplots <- lapply(vars, function(var) {
  create_dotplots(appp_data, var)
})

for (i in seq_along(dotplots)) {
  print(dotplots[[i]])
}


```
```{r}
missing_data <- appp_data |>
  summarise(across(everything(), ~ sum(is.na(.)))) |>
  pivot_longer(everything(), names_to = "variable", values_to = "missing_count") |>
  filter(missing_count > 0)

summary_stats <- appp_data |>
  filter(!is.na(rate_of_pregnant_women_with_oud_diagnosis)) |>
  summarize(
    Mean = round(mean(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    Median = round(median(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    SD = round(sd(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    Min = round(min(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    Max = round(max(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    IQR = round(IQR(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    Count = n()
  )

assorted_summary <- appp_data |>
  select(poverty_rate, unemployment_rate_2022, median_household_income_2022, 
         pct_prenatal_care_first_trimester, pct_low_birth_weight, 
         pct_cesarean_section, fertility_rate, pct_fair_poor_health) |>
  pivot_longer(everything(), names_to = "variable", values_to = "value") |>
  filter(!is.na(value)) |>
  group_by(variable) |>
  summarize(
    Mean = round(mean(value, na.rm = TRUE), 2),
    Median = round(median(value, na.rm = TRUE), 2),
    SD = round(sd(value, na.rm = TRUE), 2),
    Min = round(min(value, na.rm = TRUE), 2),
    Max = round(max(value, na.rm = TRUE), 2),
    IQR = round(IQR(value, na.rm = TRUE), 2),
    Count = n(),
    .groups = "drop"
  )

rural_urban <- appp_data |>
  mutate(rural_urban_cat = case_when(
    rural_urban_continuum_code_2023 <= 3 ~ "Urban",
    rural_urban_continuum_code_2023 <= 5 ~ "Suburban",
    rural_urban_continuum_code_2023 <= 7 ~ "Rural",
    TRUE ~ "Unknown"
  )) |>
  filter(rural_urban_cat != "Unknown") |>
  group_by(rural_urban_cat) |>
  summarize(
    n_counties = n(),
    median_oud_rate = round(median(rate_of_pregnant_women_with_oud_diagnosis, na.rm = TRUE), 2),
    median_poverty_rate = round(median(poverty_rate, na.rm = TRUE), 2),
    median_unemployment_rate = round(median(unemployment_rate_2022, na.rm = TRUE), 2),
    true_median_income = round(median(median_household_income_2022, na.rm = TRUE), 2),
    median_pct_prenatal_care = round(median(pct_prenatal_care_first_trimester, na.rm = TRUE), 2)
  )

## Outliers ## 
identify_outliers <- function(data, var_name) {
  values <- data[[var_name]]
  values <- values[!is.na(values)]
  
  Q1 <- quantile(values, 0.25)
  Q3 <- quantile(values, 0.75)
  IQR <- Q3 - Q1
  
  lower_bound <- Q1 - 1.5 * IQR
  upper_bound <- Q3 + 1.5 * IQR
  
  outliers <- data |>
    filter(.data[[var_name]] < lower_bound | .data[[var_name]] > upper_bound) |>
    select(county_name, all_of(var_name))
  
  return(outliers)
}
outliers_list <- lapply(vars, function(var) {
  identify_outliers(appp_data, var)
})

outliers_summary <- lapply(outliers_list, function(outliers) {
  if (nrow(outliers) > 0) {
    return(outliers)
  } else {
    return(data.frame(county_name = NA, value = NA))
  }
})

```


## EDA - ANOVA?

```{r}
anova_data <- appp_data |>
  filter(!is.na(rate_of_pregnant_women_with_oud_diagnosis)) |>
  mutate(
    county_group = case_when(
      county_name == "Allegheny" ~ "Allegheny County",
      pop_category == "Large (500K+)" & county_name != "Allegheny" ~ "Other Large Counties",
      pop_category == "Medium (100K-500K)" ~ "Medium Counties",
      pop_category %in% c("Small (50K-100K)", "Very Small (<50K)") ~ "Small Counties",
      TRUE ~ "Other"
    )
  ) |>
  filter(county_group != "Other") |>
  select(
    county_name, county_group,
    ### OUD rates ###
    oud_rate = rate_of_pregnant_women_with_oud_diagnosis,
    ### SES ###
    poverty_rate, unemployment_rate_2019, median_household_income_2022,
    ### Health factors ###
    pct_fair_poor_health, pct_prenatal_care_first_trimester, 
    fertility_rate, pct_low_birth_weight, pct_cesarean_section,
    ### Demographics ###
    pct_black, pct_hispanic, pct_asian, pct_white,
    ### Geographical data ###
    rural_urban_continuum_code_2023, metro_2023,
    ### Total population
    total_population
  )

variables_for_test <- c(
  "oud_rate", "poverty_rate", "unemployment_rate_2019", 
  "median_household_income_2022", "pct_fair_poor_health", 
  "pct_prenatal_care_first_trimester", "fertility_rate", 
  "pct_low_birth_weight", "pct_cesarean_section", 
  "pct_black", "pct_hispanic", "pct_asian", "pct_white"
)

### Creating function for ANOVA tests ###
anova_test <- function(data, variable) {
  clean_data <- data |>
    filter(!is.na(.data[[variable]]))
  
  if (nrow(clean_data) < 4) {
    return(list(anova_result = NULL, tukey_result = NULL,
                message = paste("Not enough data for ANOVA on", variable)))
  }
  ### ANOVA test ###
  formula <- as.formula(paste(variable, "~ county_group"))
  aov_model <- aov(formula, data = clean_data)
  anova_result <- broom::tidy(aov_model)
  
  ### Extract p-value ###
  p_val <- anova_result$p.value[1]
  
  ### HSD / Tukey's ###
  tukey_result <- NULL
  tukey_tidy <- NULL
  if(!is.na(p_val) && p_val< 0.05) {
    tukey_result <- TukeyHSD(aov_model)
    tukey_tidy <- broom::tidy(tukey_result)
  }
  
  return(list(
    anova_result = anova_result,
    tukey_result = tukey_tidy,
    model = aov_model,
    data = clean_data,
    variable = variable,
    p_value = p_val
  ))
}

anova_results <- lapply(variables_for_test, function(var) {
  anova_test(anova_data, var)
})

names(anova_results) <- variables_for_test
```

## Summary statistics

```{r}
appp_data |>
  group_by(pop_category) |>
  summarize(mean_pov_rate = round(mean(poverty_rate, na.rm = T), 2),
            mean_oud_rate = round(mean(rate_of_pregnant_women_with_oud_diagnosis, na.rm = T), 2),
            mean_unemployment_rate = round(mean(unemployment_rate_2019, na.rm = T), 2),
            mean_pct_fair_poor_health = round(mean(pct_fair_poor_health, na.rm = T), 2),
            mean_fertility_rate = round(mean(fertility_rate, na.rm = T), 2),
            mean_pct_prenatal_care = round(mean(pct_prenatal_care_first_trimester), 2))
```

## Preliminary models

```{r}
# Base model #
model.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~ 
                 pct_black + pct_hispanic + 
                 unemployment_rate_2019 + 
                 median_household_income_2022 + 
                 pct_prenatal_care_first_trimester + 
                 fertility_rate + pct_fair_poor_health, 
               data = appp_data)
summary(model.lm)

# Base model with more variables #
model2.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~ 
                  rural_urban_continuum_code_2023 +
                  pct_black + pct_hispanic + 
                  unemployment_rate_2022 + 
                  median_household_income_2022 +
                  pct_prenatal_care_first_trimester +
                  pct_low_birth_weight +
                  pct_cesarean_section +
                  fertility_rate + 
                  pct_fair_poor_health,
                data = appp_data)
summary(model2.lm)

# Interaction between urban area and pct_black #
model3.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~ 
                  rural_urban_continuum_code_2023 * pct_black +
                  pct_hispanic + 
                  unemployment_rate_2022 + 
                  median_household_income_2022 +
                  pct_prenatal_care_first_trimester +
                  pct_low_birth_weight +
                  fertility_rate + 
                  pct_fair_poor_health + total_population,
                data = appp_data)
summary(model3.lm)

# Logarithmic transformation on median household income & total population #
model4.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                  rural_urban_continuum_code_2023 * pct_black +
                  pct_hispanic + unemployment_rate_2022 + 
                  log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester +
                  pct_low_birth_weight +
                  fertility_rate +
                  pct_fair_poor_health + log(total_population),
                data = appp_data)
summary(model4.lm)

# Adding poverty rate as an interaction term with rural/urban continuum #
model5.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                  poverty_rate * rural_urban_continuum_code_2023 +
                  pct_black + pct_hispanic + 
                  unemployment_rate_2022 + 
                  log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester +
                  pct_low_birth_weight + fertility_rate,
                data = appp_data)
summary(model5.lm)

# Model with pct_black and pct_hispanic interaction #
model8.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                  rural_urban_continuum_code_2023 +
                  pct_black * pct_hispanic +
                  unemployment_rate_2022 + 
                  log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester +
                  pct_low_birth_weight + fertility_rate,
                data = appp_data)
summary(model8.lm)

# Polynomial terms for pct_black #
model6.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~ 
                  rural_urban_continuum_code_2023 +
                  pct_black + I(pct_black^2) +
                  pct_hispanic + unemployment_rate_2022 +
                  log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester +
                  fertility_rate + pct_fair_poor_health,
                data = appp_data)
summary(model6.lm)

# Healthcare access interaction #
model7.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                  rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                  pct_black + pct_hispanic + unemployment_rate_2022 * log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester + I(pct_prenatal_care_first_trimester^2) +
                  fertility_rate,
                data = appp_data)
summary(model7.lm)

### Model 7 with highest R^2 value, also shows significance in 5 different variables ###

model7a.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                   rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                   pct_black + pct_hispanic + unemployment_rate_2022 * 
                   log(median_household_income_2022) + fertility_rate + 
                   pct_fair_poor_health + pct_low_birth_weight + pct_cesarean_section, 
                 data = appp_data)
summary(model7a.lm)

model7b.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                   rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                   pct_black + pct_hispanic + unemployment_rate_2022 * 
                   log(median_household_income_2022) + fertility_rate + 
                   pct_fair_poor_health + pct_low_birth_weight * pct_cesarean_section +
                   poverty_rate * rural_urban_continuum_code_2023, 
                 data = appp_data)
summary(model7b.lm)

model7c.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                  rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                  pct_black + I(pct_black^2) +
                  pct_hispanic + I(pct_hispanic^2) +
                  unemployment_rate_2022 * log(median_household_income_2022) +
                  pct_prenatal_care_first_trimester + I(pct_prenatal_care_first_trimester^2) +
                  fertility_rate + I(fertility_rate^2),
                data = appp_data)
summary(model7c.lm)

model7d.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                   rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                   pct_black + I(pct_black^2) + pct_hispanic + I(pct_hispanic^2) +
                   unemployment_rate_2022 * log(median_household_income_2022) +
                   pct_prenatal_care_first_trimester + I(pct_prenatal_care_first_trimester^2), 
                 data = appp_data)
summary(model7d.lm)

model7e.lm <- lm(rate_of_pregnant_women_with_oud_diagnosis ~
                   rural_urban_continuum_code_2023 * pct_prenatal_care_first_trimester +
                   pct_black + pct_hispanic + I(pct_hispanic^2) +
                   unemployment_rate_2022 + log(median_household_income_2022) +
                   fertility_rate + pct_fair_poor_health,
                 data = appp_data)
summary(model7e.lm)
```
